# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
name: Tests
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'templates/**'
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'templates/**'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.15'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # run tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        # supported Terraform versions
        terraform:
          - '0.13.0'
          - '0.14.0'
    steps:

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.15'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download
        
    - name: TF unit tests
      timeout-minutes: 5
      env:
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
      run: |
        make test

    # - name: TF acceptance tests
    #   timeout-minutes: 10
    #   env:
    #     TF_ACC: "1"
    #     TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}

    #     # Set whatever additional acceptance test env vars here. You can
    #     # optionally use data from your repository secrets using the
    #     # following syntax:
    #     # SOME_VAR: ${{ secrets.SOME_VAR }}

    #   run: |
    #     go test -v -cover ./internal/provider/`